{"version":3,"file":"static/js/405.f9cdb474.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","redux/filters/selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/Error/Error.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  border: 1px solid #04273b;\n  padding: 24px;\n  border-radius: 5px;\n  margin-bottom: 16px;\n`;\nexport const Input = styled(Field)`\n  padding: 14px;\n  margin-bottom: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: #04273a;\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  width: 200px;\n  padding: 14px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  font-size: 20px;\n  cursor: pointer;\n  background-color: #136393;\n  color: #fff; \n  transition: background-color 0.3s ease-in-out;\n  &:hover,\n  &:focus {\n    background-color: #3799D2;\n    transform: scale(1.05);\n  }\n}\n`;\nexport const ErrMessage = styled(ErrorMessage)`\n  color: red;\n  font-size: 20px;\n`;\nexport const Title = styled.h2`\n  color: #04273b;\n  font-size: 40px;\n  margin-bottom: 10px;\n`;\nexport const Wrapper = styled.div`\n  padding: 24px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filters/selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const filteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","export const selectFilter = state => state.filter;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Input,\n  StyledForm,\n  Label,\n  Button,\n  ErrMessage,\n  Title,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters.'\n    )\n    .required('Required'),\n  number: Yup.string()\n    .min(5, 'Too Short!')\n    .max(15, 'Too Long!')\n    .matches(\n      /\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, actions) => {\n    const dublicateContact = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (dublicateContact) {\n      return alert(`${values.name} already in contact list!`);\n    }\n    dispatch(addContact(values));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={ContactSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <>\n          <Title>Phone book</Title>\n          <StyledForm>\n            <Label>\n              Name\n              <Input type=\"text\" name=\"name\" />\n              <ErrMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              Number\n              <Input type=\"tel\" name=\"number\" />\n              <ErrMessage name=\"number\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Add Contact\n            </Button>\n          </StyledForm>\n        </>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  color: #04273b;\n  font-size: 40px;\n  margin-bottom: 10px;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 26px;\n`;\nexport const Text = styled.p`\n  color: #04273a;\n  font-size: 26px;\n`;\nexport const Span = styled.span`\n  color: #04273b;\n  font-size: 26px;\n  font-weight: 600;\n`;\nexport const Info = styled.p`\n  color: #ff020f;\n  font-size: 26px;\n`;\n","import { ListItem, Span, Text, Title, Info } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { filteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(filteredContacts);\n\n  return (\n    <>\n      <Title>Contacts</Title>\n      {contacts.length > 0 ? (\n        <ul>\n          {contacts.map(({ id, name, number }) => (\n            <ListItem key={id}>\n              <Text> {name} :</Text>\n              <Span> {number}</Span>\n              <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                Delete\n              </button>\n            </ListItem>\n          ))}\n        </ul>\n      ) : (\n        <Info>Contact list ist empty!</Info>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Error = styled.p`\n  font-size: 24px;\n  text-align: center;\n  color: red;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  gap: 10px;\n  margin-bottom: 10px;\n  font-size: 24px;\n  color: #ff020f;\n`;\nexport const Input = styled.input`\n  padding: 14px;\n  margin-bottom: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  color: #04273b;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/filters/sliceFilter';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        onChange={evt => dispatch(filterContact(evt.target.value))}\n      ></Input>\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WrapperLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { WrapperLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <WrapperLoader>\n      <Oval\n        height={80}\n        width={80}\n        color=\"#0710E9\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#0710E9\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </WrapperLoader>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Wrapper } from 'components/ContactForm/ContactForm.styled';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { Error } from 'components/Error/Error.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts);\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Your contact list</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && <Loader />}\n      <Filter />\n      {!error && !isLoading && <ContactList />}\n      {error && (\n        <Error>Oops! Something went wrong. Please reload the page.</Error>\n      )}\n    </Wrapper>\n  );\n}\n"],"names":["StyledForm","styled","Form","Input","Field","Label","Button","ErrMessage","ErrorMessage","Title","Wrapper","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","filteredContacts","createSelector","filter","contact","name","toLowerCase","includes","ContactSchema","Yup","shape","min","matches","required","number","max","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","some","alert","addContact","resetForm","isSubmitting","type","component","disabled","ListItem","Text","Span","Info","ContactList","length","map","id","onClick","deleteContact","Error","Filter","onChange","evt","filterContact","target","value","WrapperLoader","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}